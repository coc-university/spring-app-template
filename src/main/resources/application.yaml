
server:
  port: 8080
  servlet:
    context-path: /api
    # base path: http://localhost:8080/api

spring:
  profiles:
    active: default, dev
  datasource:
    # http://www.h2database.com/html/features.html
    url: jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;MODE=PostgreSQL
    username: test
    password: test
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    show-sql: false
    properties:
      hibernate:
        # will be created via liquibase
        default_schema: microservice_template
        jdbc:
          time_zone: UTC
          lob.non_contextual_creation: true
  h2:
    console:
      enabled: false
      path: /h2-console
      # http://localhost:8080/api/h2-console
      # not accessible with active security
  liquibase:
    # reference to resources folder
    change-log: classpath:database/changelog_000_main.yaml
    liquibaseSchema: public
    enabled: true

springdoc:
  api-docs:
    path: "/docs-api"
  swagger-ui:
    path: "/docs-ui"
    # http://localhost:8080/api/docs-ui

logging:
  level:
    root: info

# custom properties
my-section:
  my-prop: my-val # access via class ConfigProperties
  hello-message: ${HELLO_MESSAGE:Hello from default profile with default message} # access via @Value

management:
  endpoints:
    web:
      exposure:
        include: info, health, metrics, beans, prometheus
      path-mapping:
        health: health
        info: info
        beans: beans
        metrics: metrics
        prometheus: metrics/prometheus
      base-path: /
  endpoint:
    health:
      show-details: always
      cache:
        time-to-live: 3000
      probes:
        enabled: true
      group:
        readiness:
          include: "readinessState"
    prometheus:
      enabled: true
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true
