server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: ${SERVLET_CONTEXT_PATH:}
    # base path: http://localhost:8080

spring:
  profiles:
    active: ${SPRING_PROFILES:default, dev}
  security:
    user:
      name: test
      password: test
  datasource:
    # url: jdbc:postgresql://${DB_HOSTNAME:localhost}:${DB_PORT:5432}/${DB_NAME:spring-template}
    # http://www.h2database.com/html/features.html
    url: jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;MODE=PostgreSQL
    username: ${DB_USERNAME:test}
    password: ${DB_PASSWORD:test}
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    show-sql: false
    properties:
      hibernate:
        # will be created via liquibase
        default_schema: spring_app_template
        jdbc:
          time_zone: UTC
          lob.non_contextual_creation: true
  h2:
    console:
      enabled: true
      path: /h2-console
      # http://localhost:8080/h2-console
  liquibase:
    # reference to resources folder
    change-log: classpath:database/changelog_000_main.yaml
    liquibaseSchema: public
    enabled: ${LIQUIBASE_ENABLED:true}

springdoc:
  api-docs:
    path: "/docs-api"
  swagger-ui:
    path: "/docs-ui"
    # http://localhost:8080/docs-ui

logging:
  level:
    root: ${LOGGING_ROOT_LEVEL:info}

# custom properties
my-section:
  my-prop: my-val # access via class ConfigProperties
  hello-message: ${HELLO_MESSAGE:Hello from default profile with default message} # access via @Value

management:
  endpoints:
    web:
      exposure:
        include: ${ACTUATOR_ENDPOINTS:info, health, metrics, beans, prometheus}
      path-mapping:
        health: health
        info: info
        beans: beans
        metrics: metrics
        prometheus: metrics/prometheus
      base-path: /
  endpoint:
    health:
      show-details: ${ACTUATOR_HEALTH_SHOW_DETAILS:always}
      cache:
        time-to-live: ${ACTUATOR_HEALTH_TTL:3000}
      probes:
        enabled: ${ACTUATOR_HEALTH_ENABLED:true}
      group:
        readiness:
          include: "readinessState"
    prometheus:
      enabled: ${ACTUATOR_PROMETHEUS_ENABLED:true}
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true
